CREATE TABLE "AUTH_PERMISSION" (
    "ID" NUMBER(11) NOT NULL PRIMARY KEY,
    "NAME" NVARCHAR2(50),
    "CONTENT_TYPE_ID" NUMBER(11) NOT NULL REFERENCES "DJANGO_CONTENT_TYPE" ("ID") DEFERRABLE INITIALLY DEFERRED,
    "CODENAME" NVARCHAR2(100),
    UNIQUE ("CONTENT_TYPE_ID", "CODENAME")
)
;

DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(*) INTO i FROM USER_CATALOG
        WHERE TABLE_NAME = 'AUTH_PERMISSION_SQ' AND TABLE_TYPE = 'SEQUENCE';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE "AUTH_PERMISSION_SQ"';
    END IF;
END;
/

CREATE OR REPLACE TRIGGER "AUTH_PERMISSION_TR"
BEFORE INSERT ON "AUTH_PERMISSION"
FOR EACH ROW
WHEN (new."ID" IS NULL)
    BEGIN
        SELECT "AUTH_PERMISSION_SQ".nextval
        INTO :new."ID" FROM dual;
    END;
/
CREATE TABLE "AUTH_GROUP_PERMISSIONS" (
    "ID" NUMBER(11) NOT NULL PRIMARY KEY,
    "GROUP_ID" NUMBER(11) NOT NULL,
    "PERMISSION_ID" NUMBER(11) NOT NULL REFERENCES "AUTH_PERMISSION" ("ID") DEFERRABLE INITIALLY DEFERRED,
    UNIQUE ("GROUP_ID", "PERMISSION_ID")
)
;

DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(*) INTO i FROM USER_CATALOG
        WHERE TABLE_NAME = 'AUTH_GROUP_PERMISSIONS_SQ' AND TABLE_TYPE = 'SEQUENCE';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE "AUTH_GROUP_PERMISSIONS_SQ"';
    END IF;
END;
/

CREATE OR REPLACE TRIGGER "AUTH_GROUP_PERMISSIONS_TR"
BEFORE INSERT ON "AUTH_GROUP_PERMISSIONS"
FOR EACH ROW
WHEN (new."ID" IS NULL)
    BEGIN
        SELECT "AUTH_GROUP_PERMISSIONS_SQ".nextval
        INTO :new."ID" FROM dual;
    END;
/
CREATE TABLE "AUTH_GROUP" (
    "ID" NUMBER(11) NOT NULL PRIMARY KEY,
    "NAME" NVARCHAR2(80) UNIQUE
)
;

DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(*) INTO i FROM USER_CATALOG
        WHERE TABLE_NAME = 'AUTH_GROUP_SQ' AND TABLE_TYPE = 'SEQUENCE';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE "AUTH_GROUP_SQ"';
    END IF;
END;
/

CREATE OR REPLACE TRIGGER "AUTH_GROUP_TR"
BEFORE INSERT ON "AUTH_GROUP"
FOR EACH ROW
WHEN (new."ID" IS NULL)
    BEGIN
        SELECT "AUTH_GROUP_SQ".nextval
        INTO :new."ID" FROM dual;
    END;
/
ALTER TABLE "AUTH_GROUP_PERMISSIONS" ADD CONSTRAINT "GROUP_ID_REFS_ID_F4B32AAC" FOREIGN KEY ("GROUP_ID") REFERENCES "AUTH_GROUP" ("ID") DEFERRABLE INITIALLY DEFERRED;
CREATE TABLE "AUTH_USER_GROUPS" (
    "ID" NUMBER(11) NOT NULL PRIMARY KEY,
    "USER_ID" NUMBER(11) NOT NULL,
    "GROUP_ID" NUMBER(11) NOT NULL REFERENCES "AUTH_GROUP" ("ID") DEFERRABLE INITIALLY DEFERRED,
    UNIQUE ("USER_ID", "GROUP_ID")
)
;

DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(*) INTO i FROM USER_CATALOG
        WHERE TABLE_NAME = 'AUTH_USER_GROUPS_SQ' AND TABLE_TYPE = 'SEQUENCE';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE "AUTH_USER_GROUPS_SQ"';
    END IF;
END;
/

CREATE OR REPLACE TRIGGER "AUTH_USER_GROUPS_TR"
BEFORE INSERT ON "AUTH_USER_GROUPS"
FOR EACH ROW
WHEN (new."ID" IS NULL)
    BEGIN
        SELECT "AUTH_USER_GROUPS_SQ".nextval
        INTO :new."ID" FROM dual;
    END;
/
CREATE TABLE "AUTH_USER_USER_PERMISSIONS" (
    "ID" NUMBER(11) NOT NULL PRIMARY KEY,
    "USER_ID" NUMBER(11) NOT NULL,
    "PERMISSION_ID" NUMBER(11) NOT NULL REFERENCES "AUTH_PERMISSION" ("ID") DEFERRABLE INITIALLY DEFERRED,
    UNIQUE ("USER_ID", "PERMISSION_ID")
)
;

DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(*) INTO i FROM USER_CATALOG
        WHERE TABLE_NAME = 'AUTH_USER_USER_PERMISSIONS_SQ' AND TABLE_TYPE = 'SEQUENCE';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE "AUTH_USER_USER_PERMISSIONS_SQ"';
    END IF;
END;
/

CREATE OR REPLACE TRIGGER "AUTH_USER_USER_PERMISSIONS_TR"
BEFORE INSERT ON "AUTH_USER_USER_PERMISSIONS"
FOR EACH ROW
WHEN (new."ID" IS NULL)
    BEGIN
        SELECT "AUTH_USER_USER_PERMISSIONS_SQ".nextval
        INTO :new."ID" FROM dual;
    END;
/
CREATE TABLE "AUTH_USER" (
    "ID" NUMBER(11) NOT NULL PRIMARY KEY,
    "PASSWORD" NVARCHAR2(128),
    "LAST_LOGIN" TIMESTAMP NOT NULL,
    "IS_SUPERUSER" NUMBER(1) CHECK ("IS_SUPERUSER" IN (0,1)) NOT NULL,
    "USERNAME" NVARCHAR2(30) UNIQUE,
    "FIRST_NAME" NVARCHAR2(30),
    "LAST_NAME" NVARCHAR2(30),
    "EMAIL" NVARCHAR2(75),
    "IS_STAFF" NUMBER(1) CHECK ("IS_STAFF" IN (0,1)) NOT NULL,
    "IS_ACTIVE" NUMBER(1) CHECK ("IS_ACTIVE" IN (0,1)) NOT NULL,
    "DATE_JOINED" TIMESTAMP NOT NULL
)
;

DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(*) INTO i FROM USER_CATALOG
        WHERE TABLE_NAME = 'AUTH_USER_SQ' AND TABLE_TYPE = 'SEQUENCE';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE "AUTH_USER_SQ"';
    END IF;
END;
/

CREATE OR REPLACE TRIGGER "AUTH_USER_TR"
BEFORE INSERT ON "AUTH_USER"
FOR EACH ROW
WHEN (new."ID" IS NULL)
    BEGIN
        SELECT "AUTH_USER_SQ".nextval
        INTO :new."ID" FROM dual;
    END;
/
ALTER TABLE "AUTH_USER_GROUPS" ADD CONSTRAINT "USER_ID_REFS_ID_40C41112" FOREIGN KEY ("USER_ID") REFERENCES "AUTH_USER" ("ID") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "AUTH_USER_USER_PERMISSIONS" ADD CONSTRAINT "USER_ID_REFS_ID_4DC23C39" FOREIGN KEY ("USER_ID") REFERENCES "AUTH_USER" ("ID") DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX "AUTH_PERMISSION_37EF4EB4" ON "AUTH_PERMISSION" ("CONTENT_TYPE_ID");
CREATE TABLE "DJANGO_CONTENT_TYPE" (
    "ID" NUMBER(11) NOT NULL PRIMARY KEY,
    "NAME" NVARCHAR2(100),
    "APP_LABEL" NVARCHAR2(100),
    "MODEL" NVARCHAR2(100),
    UNIQUE ("APP_LABEL", "MODEL")
)
;

DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(*) INTO i FROM USER_CATALOG
        WHERE TABLE_NAME = 'DJANGO_CONTENT_TYPE_SQ' AND TABLE_TYPE = 'SEQUENCE';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE "DJANGO_CONTENT_TYPE_SQ"';
    END IF;
END;
/

CREATE OR REPLACE TRIGGER "DJANGO_CONTENT_TYPE_TR"
BEFORE INSERT ON "DJANGO_CONTENT_TYPE"
FOR EACH ROW
WHEN (new."ID" IS NULL)
    BEGIN
        SELECT "DJANGO_CONTENT_TYPE_SQ".nextval
        INTO :new."ID" FROM dual;
    END;
/
CREATE TABLE "DJANGO_SESSION" (
    "SESSION_KEY" NVARCHAR2(40) NOT NULL PRIMARY KEY,
    "SESSION_DATA" NCLOB,
    "EXPIRE_DATE" TIMESTAMP NOT NULL
)
;
CREATE INDEX "DJANGO_SESSION_B7B81F0C" ON "DJANGO_SESSION" ("EXPIRE_DATE");
CREATE TABLE "DJANGO_SITE" (
    "ID" NUMBER(11) NOT NULL PRIMARY KEY,
    "DOMAIN" NVARCHAR2(100),
    "NAME" NVARCHAR2(50)
)
;

DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(*) INTO i FROM USER_CATALOG
        WHERE TABLE_NAME = 'DJANGO_SITE_SQ' AND TABLE_TYPE = 'SEQUENCE';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE "DJANGO_SITE_SQ"';
    END IF;
END;
/

CREATE OR REPLACE TRIGGER "DJANGO_SITE_TR"
BEFORE INSERT ON "DJANGO_SITE"
FOR EACH ROW
WHEN (new."ID" IS NULL)
    BEGIN
        SELECT "DJANGO_SITE_SQ".nextval
        INTO :new."ID" FROM dual;
    END;
/

COMMIT;
